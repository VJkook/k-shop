import { useState, FC } from 'react';
import styles from './OrderTable.module.scss';


interface Recipe {
    id: number;
    name: string;
}
const RecipeList: FC = () => {

    const [recipes, setRecipes] = useState<Recipe[]>([
        { id: 1, name: '–≠–∫–ª–µ—Ä—ã —Å —à–æ–∫–æ–ª–∞–¥–æ–º' },
        { id: 2, name: '–ë–ª–∏–Ω—ã —Å —Ç–≤–æ—Ä–æ–≥–æ–º' },
        { id: 3, name: '–®–∞—Ä–ª–æ—Ç–∫–∞ —Å —è–±–ª–æ–∫–∞–º–∏' },

    ]);

    const [searchQuery, setSearchQuery] = useState('');

    const filteredRecipes = recipes.filter(recipe =>
        recipe.name.toLowerCase().includes(searchQuery.toLowerCase())
    );

    const handleView = (id: number) => {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å router.push(`/recipes/${id}`) –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Next.js
        alert(`–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ—Ü–µ–ø—Ç—É ID: ${id}`);
    };

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <div className={styles.title}>–°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤</div>
                <div className={styles.counter}>{filteredRecipes.length} —Ä–µ—Ü–µ–ø—Ç–æ–≤</div>
            </div>

            <div className={styles.filters}>
                <div className={styles.searchContainer}>
                    <div className={styles.searchInput}>
                        <span className={styles.searchIcon}>üîç</span>
                        <input
                            type="text"
                            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ä–µ—Ü–µ–ø—Ç–∞..."
                            value={searchQuery}
                            onChange={e => setSearchQuery(e.target.value)}
                        />
                    </div>
                </div>
            </div>

            <div className={styles.tableResponsive}>
                <table className={styles.table}>
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    {filteredRecipes.map(recipe => (
                        <tr key={recipe.id}>
                            <td>{recipe.id}</td>
                            <td className={styles.truncate}>{recipe.name}</td>
                            <td>
                                <a href={`/recipes/${recipe.id}`} className={styles.detailsButton}>–ü–µ—Ä–µ–π—Ç–∏</a>
                            </td>
                        </tr>
                    ))}
                    {filteredRecipes.length === 0 && (
                        <tr>
                            <td colSpan="3">–†–µ—Ü–µ–ø—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</td>
                        </tr>
                    )}
                    </tbody>
                </table>
            </div>
        </div>
    );
}
export default RecipeList
